name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      id: build-image
      run: docker build . --file Dockerfile --tag my-pythonapp:${{ github.run_number }}

    - name: Push Docker image to ECR
      id: ecr
      uses: jwalton/gh-ecr-push@v2
      with:
        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: eu-north-1
        image: my-pythonapp:${{ github.run_number }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: "eu-north-1"

    - name: Update ECS task definition with new image ID
      run: sed -i 's/PLACEHOLDER_TAG/${{ github.run_number }}/' .aws/task-definition.json

    - name: Debug rendered task definition
      run: cat .aws/task-definition.json

    - name: Deploy ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ".aws/task-definition.json"
        service: "ecr-push"
        cluster: "test"
        wait-for-service-stability: true
